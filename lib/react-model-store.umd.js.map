{"version":3,"file":"react-model-store.umd.js","sources":["../src/react-model-store.ts"],"sourcesContent":["import React from 'react';\n\nexport type Accessor<T extends any> = (() => T) & ((value: T) => void);\nexport type Action<TArgs extends any[] = []> = (...args: TArgs) => void;\nexport type Event<TArgs extends any[]> = Action<TArgs> & {\n  add(listener: Action<TArgs>, dep?: ModelBase): boolean;\n  remove(listener: Action<TArgs>): boolean;\n  clear(): void;\n};\nexport interface ModelClass<TModel extends {}, TValue = void> {\n  new (initialValue: TValue): TModel;\n}\n\ninterface Box<T> {\n  inner: T;\n}\n\nclass Meta {\n  readonly models: ModelBase[] = [];\n  finalized: boolean = false;\n  mounted: boolean = true;\n  readonly hooks: Action[] = [];\n  readonly mountEvents: Action[] = [];\n  readonly unmountEvents: Action[] = [];\n\n  deceiveHooks(): void {\n    this.hooks.forEach(useHook => {\n      useHook();\n    });\n  }\n}\n\nconst metaStore = new Map<{}, Meta>();\nconst current = {\n  meta: null as Meta | null,\n};\nconst listenerDependencyStore = new Map<\n  ModelBase,\n  Map<Action<any>, Event<any>>\n>();\n\nfunction createEventHandler<TArgs extends any[]>(): Event<TArgs> {\n  const listenerMap = new Map<Action<TArgs>, ModelBase | null>();\n\n  function event(...args: TArgs): void {\n    listenerMap.forEach((_, listener) => {\n      listener(...args);\n    });\n  }\n\n  function add(listener: Action<TArgs>, dep?: ModelBase): boolean {\n    if (dep && !(dep as any).mounted) {\n      throw new Error('Unmounted model objects cannot add event listener');\n    }\n    if (listenerMap.has(listener)) {\n      return false;\n    }\n    listenerMap.set(listener, dep === undefined ? null : dep);\n    if (dep) {\n      let map = listenerDependencyStore.get(dep);\n      if (map === undefined) {\n        listenerDependencyStore.set(dep, (map = new Map()));\n      }\n      map.set(listener, event as Event<TArgs>);\n    }\n    return true;\n  }\n\n  function remove(listener: Action<TArgs>): boolean {\n    const dep = listenerMap.get(listener);\n    if (dep === undefined) {\n      return false;\n    }\n    listenerMap.delete(listener);\n    if (dep) {\n      listenerDependencyStore.get(dep)!.delete(listener);\n    }\n    return true;\n  }\n\n  function clear(): void {\n    const listeners: Action<TArgs>[] = [];\n    listenerMap.forEach((_, listener) => {\n      listeners.push(listener);\n    });\n    listeners.forEach(listener => {\n      remove(listener);\n    });\n  }\n\n  Object.defineProperties(event, {\n    add: {\n      value: add,\n    },\n    remove: {\n      value: remove,\n    },\n    clear: {\n      value: clear,\n    },\n  });\n\n  return event as Event<TArgs>;\n}\n\nfunction createStateAccessor<T extends any>(\n  meta: Meta,\n  initialValue: T | (() => T),\n  finalizeRequired: boolean\n): Accessor<T> {\n  if (meta.finalized) {\n    throw new Error(\n      'createStateAccessor() must be called from constructors of classes that extend Model or PureModel'\n    );\n  }\n\n  let state =\n    typeof initialValue === 'function'\n      ? (initialValue as () => T)()\n      : initialValue;\n  let setState = React.useState(state)[1];\n  meta.hooks.push(() => {\n    setState = React.useState(state)[1];\n  });\n\n  const getter = () => state;\n  const setter = (value: T) => {\n    if (meta.mounted) {\n      state = value;\n      setState(state);\n    }\n  };\n\n  function accessor(value?: T): any {\n    return arguments.length === 0 ? getter() : setter(value!);\n  }\n\n  if (finalizeRequired) {\n    Object.defineProperties(accessor, {\n      _finalizeRequired: { value: true },\n      _getter: { value: getter },\n      _setter: { value: setter },\n    });\n  }\n  return accessor;\n}\n\nexport abstract class ModelBase {\n  private readonly _meta: Meta;\n\n  constructor() {\n    if (!current.meta) {\n      throw new Error(\n        'Model constructors must be called from createModel argument of createStore() function.'\n      );\n    }\n    this._meta = current.meta;\n    this._meta.mountEvents.push(() => {\n      this.onMount();\n    });\n    this._meta.unmountEvents.push(() => {\n      this.onUnmount();\n      const removeListenerMap = listenerDependencyStore.get(this);\n      if (removeListenerMap !== undefined) {\n        const targets: [Event<any>, Action<any>][] = [];\n        removeListenerMap.forEach((eventHandler, listener) =>\n          targets.push([eventHandler, listener])\n        );\n        targets.forEach(([eventHandler, listener]) => {\n          eventHandler.remove(listener);\n        });\n        listenerDependencyStore.delete(this);\n      }\n    });\n  }\n\n  protected get mounted(): boolean {\n    return this._meta.mounted;\n  }\n\n  // tslint:disable-next-line: no-empty\n  protected onMount(): void {}\n\n  // tslint:disable-next-line: no-empty\n  protected onUnmount(): void {}\n\n  protected hook<T = void>(useHook: () => T): T {\n    if (this._meta.finalized) {\n      throw new Error(\n        'hook() must be called from constructors of Model classes'\n      );\n    }\n    const result = useHook();\n    this._meta.hooks.push(useHook);\n    return result;\n  }\n\n  protected use<TModel extends {}, TValue = void>(\n    store: Store<TModel, TValue>\n  ): TModel {\n    return this.hook(() => store.use());\n  }\n\n  protected ref<T>(initialValue?: T): React.RefObject<T> {\n    return arguments.length === 0\n      ? React.createRef()\n      : ({ current: initialValue } as React.RefObject<T>);\n  }\n\n  protected event<TArgs extends any[]>(listener?: Action<TArgs>): Event<TArgs> {\n    const e = createEventHandler<TArgs>();\n    if (listener) {\n      e.add(listener, this);\n    }\n    return e;\n  }\n\n  protected addListener<TArgs extends any[]>(\n    event: Event<TArgs>,\n    listener: Action<TArgs>\n  ): boolean {\n    return event.add(listener, this);\n  }\n\n  protected removeListener<TArgs extends any[]>(\n    event: Event<TArgs>,\n    listener: Action<TArgs>\n  ): boolean {\n    return event.remove(listener);\n  }\n}\n\n/**\n * PureModel can only use functional getter/setter.\n * In case of using React Hooks from constructor of derived classes,\n * React Hooks functions must be called through the use of hook function.\n */\nexport abstract class PureModel extends ModelBase {\n  /**\n   * @example\n   * class CounterModel extends PureModel {\n   *   // state() is used to define functional state getter/setter.\n   *   private readonly _count= this.state<number>(0);\n   *\n   *   get count(): number {\n   *     return this._count();\n   *   }\n   *\n   *   readonly increment = () => this._count(this.count + 1);\n   * }\n   *\n   * @param initialValue an initial value or a function that returns it.\n   */\n  protected state<T extends any>(initialValue: T | (() => T)): Accessor<T> {\n    return createStateAccessor(\n      (this as any)._meta as Meta,\n      initialValue,\n      false\n    );\n  }\n}\n\n/**\n * Model-based React Hooks wrapper.\n * In case of using React Hooks from constructor of derived classes,\n * React Hooks functions must be called through the use of hook() function.\n *\n * @example\n * class ComponentModel extends Model {\n *   // this.state() method is React.useState() wrapper.\n *   message: string = this.state('initial state value');\n *\n *   update(newMessage: string): void {\n *     this.message = newMessage; // call setState()\n *   }\n * }\n */\nexport abstract class Model extends ModelBase {\n  constructor() {\n    super();\n    ((this as any)._meta as Meta).models.push(this);\n  }\n\n  /**\n   * This function must be called from constructor, and properties defined by this function must not be accessed from constructor.\n   *\n   * @example\n   * class CounterModel extends Model {\n   *   // State values can be accessed as variable after Model constructor is called.\n   *   count: number = this.state(0);\n   *\n   *   readonly increment = () => this.count = this.count + 1;\n   * }\n   *\n   * @param initialValue an initial value or a function that returns it.\n   */\n  protected state<T extends any>(initialValue: T | (() => T)): T {\n    return (createStateAccessor(\n      (this as any)._meta as Meta,\n      initialValue,\n      true\n    ) as unknown) as T;\n  }\n\n  /**\n   * @example\n   * class CounterModel extends Model {\n   *   // stateFunc() is used to define functional state getter/setter.\n   *   private readonly _count = this.stateFunc<number>(0);\n   *\n   *   get count(): number {\n   *     return this._count();\n   *   }\n   *\n   *   readonly increment = () => this._count(this.count + 1);\n   * }\n   *\n   * @param initialValue an initial value or a function that returns it.\n   */\n  protected stateFunc<T extends any>(initialValue: T | (() => T)): Accessor<T> {\n    return createStateAccessor(\n      (this as any)._meta as Meta,\n      initialValue,\n      false\n    );\n  }\n}\n\nfunction finalize(meta: Meta): void {\n  for (const model of meta.models) {\n    Object.entries(model).forEach(([k, v]) => {\n      if (typeof v === 'function' && v._finalizeRequired === true) {\n        Object.defineProperty(model, k, {\n          get: v._getter,\n          set: v._setter,\n        });\n      }\n    });\n  }\n}\n\nfunction resolveModel<TModel extends {}>(createModel: () => TModel): TModel {\n  const ref = React.useRef<TModel>();\n  let meta: Meta;\n  if (!ref.current) {\n    let model: TModel;\n    current.meta = meta = new Meta();\n    try {\n      model = createModel();\n    } finally {\n      current.meta = null;\n    }\n    metaStore.set(model, meta);\n    finalize(meta);\n    meta.finalized = true;\n    ref.current = model;\n  } else {\n    meta = metaStore.get(ref.current)!;\n    meta.deceiveHooks();\n  }\n\n  React.useEffect(() => {\n    meta.mountEvents.forEach(onMount => onMount());\n    return () => {\n      for (let i = meta.unmountEvents.length - 1; i >= 0; i--) {\n        meta.unmountEvents[i]();\n      }\n      meta.mounted = false;\n      metaStore.delete(ref.current!);\n    };\n  }, []);\n\n  return ref.current!;\n}\n\nexport interface StoreProviderProps<TValue = void> {\n  initialValue?: TValue;\n  children: React.ReactNode;\n}\n\nexport interface StoreConsumerProps<TModel extends {}> {\n  children: (model: TModel) => React.ReactNode;\n}\n\nexport interface Store<TModel extends {}, TValue = void> {\n  readonly Provider: React.FunctionComponent<StoreProviderProps<TValue>>;\n  readonly Consumer: React.FunctionComponent<StoreConsumerProps<TModel>>;\n  use(): TModel;\n}\n\nexport function createStore<TModel extends {}, TValue = void>(\n  modelClass: ModelClass<TModel, TValue>\n): Store<TModel, TValue> {\n  const Context = React.createContext<Box<TModel> | null>(null);\n\n  const Provider = (props: StoreProviderProps<TValue>) => {\n    const model = resolveModel(() => new modelClass(props.initialValue!));\n    return React.createElement(\n      Context.Provider,\n      { value: { inner: model } },\n      props.children\n    );\n  };\n\n  const Consumer = (props: StoreConsumerProps<TModel>) => {\n    const consumerProps = {\n      children(box: Box<TModel> | null): React.ReactNode {\n        if (box === null) {\n          throw new Error(\n            '<Store.Consumer> must be wrapped with <Store.Provider>'\n          );\n        }\n        return props.children(box.inner);\n      },\n    };\n    return React.createElement(Context.Consumer, consumerProps);\n  };\n\n  const use = () => {\n    const box = React.useContext(Context);\n    if (box === null) {\n      throw new Error('Store.use() must be wrapped with <Store.Provider>');\n    }\n    return box.inner;\n  };\n\n  return { Provider, Consumer, use };\n}\n\nexport type ModelComponentProps<TProps = {}, TValue = void> = TProps & {\n  initialValue?: TValue;\n};\n\n/**\n * Create a function component that references a model object created by createModel argument.\n * It is useful when the model is referenced by only a created component.\n * @param createModel\n * @param render\n * @returns A function component\n */\nexport function createComponent<TModel extends {}, TProps = {}, TValue = void>(\n  modelClass: ModelClass<TModel, TValue>,\n  render: (\n    model: TModel,\n    props: TProps,\n    context?: any\n  ) => React.ReactElement | null\n): React.FunctionComponent<ModelComponentProps<TProps, TValue>> {\n  return (p: ModelComponentProps<TProps, TValue>, ctx?: any) => {\n    const model = resolveModel(() => new modelClass(p.initialValue!));\n    return render(model, p, ctx);\n  };\n}\n"],"names":["Meta","constructor","deceiveHooks","hooks","forEach","useHook","const","metaStore","Map","current","meta","listenerDependencyStore","createEventHandler","listenerMap","event","_","listener","args","add","dep","mounted","Error","has","set","undefined","map","get","remove","delete","clear","listeners","push","Object","defineProperties","value","createStateAccessor","initialValue","finalizeRequired","finalized","state","setState","React","useState","getter","setter","accessor","arguments","length","_finalizeRequired","_getter","_setter","ModelBase","_meta","mountEvents","onMount","unmountEvents","onUnmount","removeListenerMap","this","targets","eventHandler","hook","result","use","store","ref","createRef","e","addListener","removeListener","PureModel","Model","models","stateFunc","finalize","model","entries","v","defineProperty","k","resolveModel","createModel","useRef","useEffect","let","i","createStore","modelClass","Context","createContext","Provider","props","createElement","inner","children","Consumer","consumerProps","box","useContext","createComponent","render","p","ctx"],"mappings":"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"}