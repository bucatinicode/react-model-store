{"version":3,"file":"react-model-store.js","sources":["../src/react-model-store.ts"],"sourcesContent":["/**\n * @license ReactModelStore v0.4.0-beta1\n * (c) 2019 bucatini\n * License: MIT\n */\n\nimport React from 'react';\n\nexport type Accessor<T extends any> = (() => T) & ((value: T) => void);\nexport type Action<TArgs extends any[] = []> = (...args: TArgs) => void;\nexport type Event<TArgs extends any[]> = Action<TArgs> & {\n  add(listener: Action<TArgs>, dep?: ModelBase): boolean;\n  remove(listener: Action<TArgs>): boolean;\n  clear(): void;\n};\nexport type ModelClass<TModel extends {}, TValue> = TValue extends void\n  ? {\n      new (): TModel;\n    }\n  : {\n      new (initialValue: TValue): TModel;\n    };\n\ntype InitialValue<TValue> = TValue extends void\n  ? {}\n  : unknown extends TValue\n  ? { initialValue?: TValue }\n  : { initialValue: TValue };\n\nexport type ModelSource<TModel extends {} = any, TValue = any> =\n  | ModelClass<TModel, TValue>\n  | Consumable<TModel>;\n\nexport type ModelType<\n  TModelSource extends ModelSource\n> = TModelSource extends ModelClass<infer TModel, any>\n  ? TModel\n  : TModelSource extends Consumable<infer TModel>\n  ? TModel\n  : never;\n\nexport type ModelTuple<TModelSourceTuple extends ModelSource[]> = {\n  [TIndex in keyof TModelSourceTuple]: TModelSourceTuple[TIndex] extends ModelSource\n    ? ModelType<TModelSourceTuple[TIndex]>\n    : never\n};\n\nexport type StoreProviderProps<TValue = void> = InitialValue<TValue> & {\n  children?: React.ReactNode;\n};\n\nexport interface StoreConsumerProps<TModel extends {}> {\n  children: (model: TModel) => React.ReactNode;\n}\n\nexport interface Consumable<TModel extends {}> {\n  consume(): TModel;\n}\n\nexport type StoreProvider<TValue = void> = React.FunctionComponent<\n  StoreProviderProps<TValue>\n>;\nexport type StoreConsumer<TModel extends {}> = React.FunctionComponent<\n  StoreConsumerProps<TModel>\n> &\n  Consumable<TModel>;\n\nexport interface Store<TModel extends {}, TValue = void>\n  extends Consumable<TModel> {\n  readonly Provider: StoreProvider<TValue>;\n  readonly Consumer: StoreConsumer<TModel>;\n}\n\ninterface Box<T> {\n  inner: T;\n}\n\nclass Meta {\n  readonly models: ModelBase[] = [];\n  finalized: boolean = false;\n  mounted: boolean = true;\n  readonly hooks: Action[] = [];\n  readonly mountEvents: Action[] = [];\n  readonly unmountEvents: Action[] = [];\n\n  deceiveHooks(): void {\n    this.hooks.forEach(useHook => {\n      useHook();\n    });\n  }\n}\n\nconst metaStore = new Map<{}, Meta>();\nconst current = {\n  meta: null as Meta | null,\n};\nconst listenerDependencyStore = new Map<\n  ModelBase,\n  Map<Action<any>, Event<any>>\n>();\n\nfunction createEvent<TArgs extends any[]>(): Event<TArgs> {\n  const listenerMap = new Map<Action<TArgs>, ModelBase | null>();\n\n  function event(...args: TArgs): void {\n    listenerMap.forEach((_, listener) => {\n      listener(...args);\n    });\n  }\n\n  function add(listener: Action<TArgs>, dep?: ModelBase): boolean {\n    if (dep && !(dep as any).mounted) {\n      throw new Error('Cannot add event listener to unmounted model objects');\n    }\n    if (listenerMap.has(listener)) {\n      return false;\n    }\n    listenerMap.set(listener, dep === undefined ? null : dep);\n    if (dep) {\n      let map = listenerDependencyStore.get(dep);\n      if (map === undefined) {\n        listenerDependencyStore.set(dep, (map = new Map()));\n      }\n      map.set(listener, event as Event<TArgs>);\n    }\n    return true;\n  }\n\n  function remove(listener: Action<TArgs>): boolean {\n    const dep = listenerMap.get(listener);\n    if (dep === undefined) {\n      return false;\n    }\n    listenerMap.delete(listener);\n    if (dep) {\n      listenerDependencyStore.get(dep)!.delete(listener);\n    }\n    return true;\n  }\n\n  function clear(): void {\n    const listeners: Action<TArgs>[] = [];\n    listenerMap.forEach((_, listener) => {\n      listeners.push(listener);\n    });\n    listeners.forEach(listener => {\n      remove(listener);\n    });\n  }\n\n  Object.defineProperties(event, {\n    add: {\n      value: add,\n    },\n    remove: {\n      value: remove,\n    },\n    clear: {\n      value: clear,\n    },\n  });\n\n  return event as Event<TArgs>;\n}\n\nfunction createStateAccessor<T extends any>(\n  meta: Meta,\n  initialValue: T | (() => T),\n  finalizeRequired: boolean\n): Accessor<T> {\n  if (meta.finalized) {\n    throw new Error(\n      'createStateAccessor() must be called from constructors of classes that extend ModelBase'\n    );\n  }\n\n  let state =\n    typeof initialValue === 'function'\n      ? (initialValue as () => T)()\n      : initialValue;\n  let setState = React.useState(state)[1];\n  meta.hooks.push(() => {\n    setState = React.useState(state)[1];\n  });\n\n  const getter = () => state;\n  const setter = (value: T) => {\n    if (meta.mounted) {\n      state = value;\n      setState(state);\n    }\n  };\n\n  function accessor(value?: T): any {\n    return arguments.length === 0 ? getter() : setter(value!);\n  }\n\n  if (finalizeRequired) {\n    Object.defineProperties(accessor, {\n      _finalizeRequired: { value: true },\n      _getter: { value: getter },\n      _setter: { value: setter },\n    });\n  }\n  return accessor;\n}\n\nexport abstract class ModelBase {\n  private readonly _meta: Meta;\n\n  constructor() {\n    if (!current.meta) {\n      throw new Error(\n        'ModelBase constructor must be called from Provider of Store created by createStore() or Component created by createComponent().'\n      );\n    }\n    this._meta = current.meta;\n    this._meta.mountEvents.push(() => {\n      this.onMount();\n    });\n    this._meta.unmountEvents.push(() => {\n      this.onUnmount();\n      const removeListenerMap = listenerDependencyStore.get(this);\n      if (removeListenerMap !== undefined) {\n        const targets: [Event<any>, Action<any>][] = [];\n        removeListenerMap.forEach((eventHandler, listener) =>\n          targets.push([eventHandler, listener])\n        );\n        targets.forEach(([eventHandler, listener]) => {\n          eventHandler.remove(listener);\n        });\n        listenerDependencyStore.delete(this);\n      }\n    });\n  }\n\n  protected get mounted(): boolean {\n    return this._meta.mounted;\n  }\n\n  // tslint:disable-next-line: no-empty\n  protected onMount(): void {}\n\n  // tslint:disable-next-line: no-empty\n  protected onUnmount(): void {}\n\n  protected hook<T = void>(useHook: () => T): T {\n    if (this._meta.finalized) {\n      throw new Error(\n        'hook() must be called from the constructor of classes that extend ModelBase'\n      );\n    }\n    const result = useHook();\n    this._meta.hooks.push(useHook);\n    return result;\n  }\n\n  protected consume<TModel extends {}, TValue>(\n    store: Store<TModel, TValue>\n  ): TModel;\n\n  protected consume<TModel extends {}>(\n    consumable: StoreConsumer<TModel> | Consumable<TModel>\n  ): TModel;\n\n  protected consume<TModel extends {}>(consumable: Consumable<TModel>): TModel {\n    return this.hook(() => consumable.consume());\n  }\n\n  protected ref<T>(initialValue?: T): React.RefObject<T> {\n    return arguments.length === 0\n      ? React.createRef()\n      : ({ current: initialValue } as React.RefObject<T>);\n  }\n\n  protected event(): Event<[]>;\n\n  protected event<TArgs extends any[]>(listener?: Action<TArgs>): Event<TArgs>;\n\n  protected event<T>(listener?: Action<[T]>): Event<[T]>;\n  protected event<T1, T2>(listener?: Action<[T1, T2]>): Event<[T1, T2]>;\n  protected event<T1, T2, T3>(\n    listener?: Action<[T1, T2, T3]>\n  ): Event<[T1, T2, T3]>;\n  protected event<T1, T2, T3, T4>(\n    listener?: Action<[T1, T2, T3, T4]>\n  ): Event<[T1, T2, T3, T4]>;\n  protected event<T1, T2, T3, T4, T5>(\n    listener?: Action<[T1, T2, T3, T4, T5]>\n  ): Event<[T1, T2, T3, T4, T5]>;\n  protected event<T1, T2, T3, T4, T5, T6>(\n    listener?: Action<[T1, T2, T3, T4, T5, T6]>\n  ): Event<[T1, T2, T3, T4, T5, T6]>;\n  protected event<T1, T2, T3, T4, T5, T6, T7>(\n    listener?: Action<[T1, T2, T3, T4, T5, T6, T7]>\n  ): Event<[T1, T2, T3, T4, T5, T6, T7]>;\n  protected event<T1, T2, T3, T4, T5, T6, T7, T8>(\n    listener?: Action<[T1, T2, T3, T4, T5, T6, T7, T8]>\n  ): Event<[T1, T2, T3, T4, T5, T6, T7, T8]>;\n\n  protected event(listener?: Action<any[]>): Event<any[]> {\n    const e = createEvent<any[]>();\n    if (listener) {\n      e.add(listener, this);\n    }\n    return e;\n  }\n\n  protected addListener<TArgs extends any[]>(\n    event: Event<TArgs>,\n    listener: Action<TArgs>\n  ): boolean {\n    return event.add(listener, this);\n  }\n\n  protected removeListener<TArgs extends any[]>(\n    event: Event<TArgs>,\n    listener: Action<TArgs>\n  ): boolean {\n    return event.remove(listener);\n  }\n}\n\n/**\n * PureModel can only use functional state accessors.\n * In case model objects are created frequently,\n * PureModel objects are created at a lower cost than Model objects.\n */\nexport abstract class PureModel extends ModelBase {\n  /**\n   * @example\n   * class CounterModel extends PureModel {\n   *   // state() is used to define functional state getter/setter.\n   *   private readonly _count= this.state<number>(0);\n   *\n   *   get count(): number {\n   *     return this._count();\n   *   }\n   *\n   *   readonly increment = () => this._count(this.count + 1);\n   * }\n   *\n   * @param initialValue an initial value or a function that returns it.\n   */\n  protected state<T extends any>(initialValue: T | (() => T)): Accessor<T> {\n    return createStateAccessor(\n      (this as any)._meta as Meta,\n      initialValue,\n      false\n    );\n  }\n}\n\n/**\n * Model-based React Hooks wrapper.\n * In case of using React Hooks from constructor of derived classes,\n * React Hooks functions must be called through the use of useHook() function.\n *\n * @example\n * class ComponentModel extends Model {\n *   // this.state() method is React.useState() wrapper.\n *   message: string = this.state('initial state value');\n *\n *   update(newMessage: string): void {\n *     this.message = newMessage; // call setState()\n *   }\n * }\n */\nexport abstract class Model extends ModelBase {\n  constructor() {\n    super();\n    ((this as any)._meta as Meta).models.push(this);\n  }\n\n  /**\n   * This function must be called from constructor, and properties defined by this function must not be accessed from constructor.\n   *\n   * @example\n   * class CounterModel extends Model {\n   *   // State values can be accessed as variable after Model constructor is called.\n   *   count: number = this.state(0);\n   *\n   *   readonly increment = () => this.count = this.count + 1;\n   * }\n   *\n   * @param initialValue an initial value or a function that returns it.\n   */\n  protected state<T extends any>(initialValue: T | (() => T)): T {\n    return (createStateAccessor(\n      (this as any)._meta as Meta,\n      initialValue,\n      true\n    ) as unknown) as T;\n  }\n\n  /**\n   * @example\n   * class CounterModel extends Model {\n   *   // stateFunc() is used to define functional state getter/setter.\n   *   private readonly _count = this.stateFunc<number>(0);\n   *\n   *   get count(): number {\n   *     return this._count();\n   *   }\n   *\n   *   readonly increment = () => this._count(this.count + 1);\n   * }\n   *\n   * @param initialValue an initial value or a function that returns it.\n   */\n  protected stateFunc<T extends any>(initialValue: T | (() => T)): Accessor<T> {\n    return createStateAccessor(\n      (this as any)._meta as Meta,\n      initialValue,\n      false\n    );\n  }\n}\n\nfunction finalize(meta: Meta): void {\n  for (const model of meta.models) {\n    Object.entries(model).forEach(([k, v]) => {\n      if (typeof v === 'function' && v._finalizeRequired === true) {\n        Object.defineProperty(model, k, {\n          get: v._getter,\n          set: v._setter,\n        });\n      }\n    });\n  }\n}\n\nfunction resolveModel<TModel extends {}>(createModel: () => TModel): TModel {\n  const ref = React.useRef<TModel>();\n  let meta: Meta;\n  if (!ref.current) {\n    let model: TModel;\n    current.meta = meta = new Meta();\n    try {\n      model = createModel();\n    } finally {\n      current.meta = null;\n    }\n    metaStore.set(model, meta);\n    finalize(meta);\n    meta.finalized = true;\n    ref.current = model;\n  } else {\n    meta = metaStore.get(ref.current)!;\n    meta.deceiveHooks();\n  }\n\n  React.useEffect(() => {\n    meta.mountEvents.forEach(onMount => onMount());\n    return () => {\n      for (let i = meta.unmountEvents.length - 1; i >= 0; i--) {\n        meta.unmountEvents[i]();\n      }\n      meta.mounted = false;\n      metaStore.delete(ref.current!);\n    };\n  }, []);\n\n  return ref.current!;\n}\n\n/**\n * Create a model store that wrapped Context API.\n * It is useful when nested components need to reference the model.\n * Every time <Store.Provider> is mounted, Store creates a model object.\n * <Store.Provider> provides the model object to nested components.\n * Then <Store.Consumer> or useStore(Store) can consume the model object.\n * @param modelClass\n * @returns Store\n */\nexport function createStore<TModel extends {}, TValue = void>(\n  modelClass: ModelClass<TModel, TValue>\n): Store<TModel, TValue> {\n  const Context = React.createContext<Box<TModel> | null>(null);\n\n  const Provider = (props: StoreProviderProps<TValue>) => {\n    const createModel = Object.prototype.hasOwnProperty.call(\n      props,\n      'initialValue'\n    )\n      ? () => new modelClass((props as { initialValue: TValue }).initialValue)\n      : () => new (modelClass as ModelClass<TModel, void>)();\n    const model = resolveModel(createModel);\n    return React.createElement(\n      Context.Provider,\n      { value: { inner: model } },\n      props.children\n    );\n  };\n\n  const Consumer = (props: StoreConsumerProps<TModel>) => {\n    const consumerProps = {\n      children(box: Box<TModel> | null): React.ReactNode {\n        if (box === null) {\n          throw new Error(\n            '<Store.Consumer> must be wrapped with <Store.Provider>'\n          );\n        }\n        return props.children(box.inner);\n      },\n    };\n    return React.createElement(Context.Consumer, consumerProps);\n  };\n\n  const consume = () => {\n    const box = React.useContext(Context);\n    if (box === null) {\n      throw new Error(\n        'Consumable.consume() must be wrapped with <Store.Provider>'\n      );\n    }\n    return box.inner;\n  };\n\n  Object.defineProperties(Consumer, {\n    consume: { value: consume },\n  });\n\n  const store = {};\n\n  Object.defineProperties(store, {\n    Provider: { value: Provider },\n    Consumer: { value: Consumer },\n    consume: { value: consume },\n  });\n\n  return store as Store<TModel, TValue>;\n}\n\n/**\n * useStore returns a model object provided by Store.Provider element in functional component.\n * @param store is Store object\n * @returns model object\n */\nexport function useStore<TModel extends {}, TValue>(\n  store: Store<TModel, TValue>\n): TModel;\n\n/**\n * useStore returns a model object provided by Store.Provider element in functional component.\n * @param consumable is an object that implements Consumable interface such as StoreConsumer.\n * @returns model object\n */\nexport function useStore<TModel extends {}>(\n  consumable: StoreConsumer<TModel> | Consumable<TModel>\n): TModel;\n\nexport function useStore<TModel extends {}>(\n  consumable: Consumable<TModel>\n): TModel {\n  return consumable.consume();\n}\n\n/**\n * useModel returns a model object related to functional component.\n * @param modelClass is model class constructor\n * @param initialValue is passed to the model class constructor.\n * @returns model object\n */\nexport function useModel<TModel extends {}, TValue = void>(\n  modelClass: ModelClass<TModel, TValue>,\n  initialValue?: TValue\n): TModel {\n  const createModel =\n    arguments.length > 1\n      ? () => new modelClass(initialValue!)\n      : () => new (modelClass as ModelClass<TModel, void>)();\n  return resolveModel(createModel);\n}\n"],"names":["Meta","constructor","deceiveHooks","hooks","forEach","useHook","const","metaStore","Map","current","meta","listenerDependencyStore","createEvent","listenerMap","event","_","listener","args","add","dep","mounted","Error","has","set","undefined","map","get","remove","delete","clear","listeners","push","Object","defineProperties","value","createStateAccessor","initialValue","finalizeRequired","finalized","state","setState","React","useState","getter","setter","accessor","arguments","length","_finalizeRequired","_getter","_setter","ModelBase","_meta","mountEvents","onMount","unmountEvents","onUnmount","removeListenerMap","this","targets","eventHandler","hook","result","consume","consumable","ref","createRef","e","addListener","removeListener","PureModel","Model","models","stateFunc","finalize","model","entries","v","defineProperty","k","resolveModel","createModel","useRef","useEffect","let","i","createStore","modelClass","Context","createContext","Provider","props","prototype","hasOwnProperty","call","createElement","inner","children","Consumer","consumerProps","box","useContext","store","useStore","useModel"],"mappings":"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"}